#!/bin/bash -e

# Copyright 2010 Boris Daeppen <boris_daeppen@bluewin.ch>
# 
# This file is part of NaYaBoh.
# 
# NaYaBoh is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# NaYaBoh is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NaYaBoh.  If not, see <http://www.gnu.org/licenses/>.

# load some functions we defined in an external file
. /usr/lib/nayaboh/functions.sh

# some vars used for log
TIMESTAMP=$(date +%Y-%m-%d_%H:%M:%S)
BACKUP=BACKUP_$TIMESTAMP
LOGFILE='/var/log/nayaboh/install.log'

# echo and log at the same time
function say {
    echo $1
    echo $1 >> $LOGFILE
}

# make sure that log dir/file exists
if [ -d /var/log/nayaboh ]; then
    echo 'var/log/nayaboh exists'
else
    echo 'no dir /var/log/nayaboh found, create one'
    mkdir /var/log/nayaboh
fi
# reset logfile
echo "" > $LOGFILE

# start the work
say "INSTALLATION OF NaYaBoh AT $TIMESTAMP"
say "----------------------------------------------"
say ""

# if an old config file exists, read parameters
INTERNET=eth0
LOCALNET=eth1
if [ -f /etc/nayaboh.conf ]; then
    say 'etc/nayaboh.conf exists'
    INTERNET=$(grep internet-interface /etc/nayaboh.conf | cut -d\= -f2)
    LOCALNET=$(grep internal-interface /etc/nayaboh.conf | cut -d\= -f2)
else
    say 'no /etc/nayaboh.conf found'
fi
say "using $INTERNET for internet and $LOCALNET for local network"

# enable the routing machanism of the linux kernel
echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf

say "### configuring routing"
# flush all configuration
iptables --flush
iptables -t nat --flush
# enable NAT and foreward http to the squid proxy
iptables -P FORWARD ACCEPT
iptables --table nat -A POSTROUTING -o $INTERNET -j MASQUERADE
# proxy trancparency
iptables -t nat -A PREROUTING -i $LOCALNET -p tcp --dport 80 -j REDIRECT --to-port 3128

iptables-save > /etc/nayaboh-iptables.up.rules

echo -e "#!/bin/sh -e
iptables-restore < /etc/nayaboh-iptables.up.rules
exit 0" > /etc/network/if-up.d/nayaboh-iptables
chmod +x /etc/network/if-up.d/nayaboh-iptables

# SQUID
say "### configuring squid proxy"
# calculate storage values for squid
total_memory=$(free -m | grep Mem | awk '{print $2}')
squid_memory=$(echo "$total_memory / 4" | bc)
total_disk=$(df -m /var/spool/squid | grep '/' | awk '{print $4}')
squid_disk=$(echo "$total_disk / 2" | bc)
say "total_disk=$total_disk MB"
say "squid_disk=$squid_disk MB"
say "total_memory=$total_memory MB"
say "squid_memory=$squid_memory MB"

# backup original squid config file
cp -v /etc/squid/squid.conf /etc/squid/squid.conf_$BACKUP 2>&1 >> $LOGFILE
# bring the oldest (original) back in place
cat $(ls -1rt /etc/squid/squid.conf_BACKUP* | head -n 1) > /etc/squid/squid.conf
# add nayaboh config to beginning of squid.conf
# because acl deny in the middle of conf file
sed -i "1icache_dir ufs /var/spool/squid $squid_disk 16 256" /etc/squid/squid.conf
sed -i "2icache_mem $squid_memory MB" /etc/squid/squid.conf
sed -i "3iacl nayaboh src 192.168.111.0/255.255.255.0" /etc/squid/squid.conf
sed -i "4ihttp_access allow nayaboh" /etc/squid/squid.conf
sed -i "5ihttp_port 3128 transparent" /etc/squid/squid.conf
sed -i "6iredirect_program /usr/bin/adzapper.wrapper" /etc/squid/squid.conf
# squid_disk is actually in MB, by treating it as KB I devide it by 1000
sed -i "7imaximum_object_size $squid_disk KB" /etc/squid/squid.conf

# DNSMASQ
say "### configuring dns and dhcp"
cp -v /etc/dnsmasq.conf /etc/dnsmasq.conf_$BACKUP 2>&1 >> $LOGFILE
echo "bogus-priv
dhcp-range=192.168.111.20,192.168.111.200,12h
domain-needed
filterwin2k
interface=$LOCALNET
no-dhcp-interface=$INTERNET
no-hosts" > /etc/dnsmasq.conf

# INTERFACES
say "### configuring network interfaces"
cp -v /etc/network/interfaces /etc/network/interfaces_$BACKUP 2>&1 >> $LOGFILE

# write iface config to file but omit those with are probably wlan
# YES this is dirty code!
# TODO: The case when both interfaces are wlan is NOT even handeled...
if [ 'match' = $(perl -e "if('$INTERNET'=~'wlan'){print \"match\n\"}") ]
then
    echo "auto lo
iface lo inet loopback

auto $LOCALNET
iface $LOCALNET inet static
    address 192.168.111.1
    netmask 255.255.255.0
    broadcast 192.168.111.255
    network 192.168.111.0" > /etc/network/interfaces
elif [ 'match' = $(perl -e "if('$LOCALNET'=~'wlan'){print \"match\n\"}") ]
then
    echo "auto lo
iface lo inet loopback

auto $INTERNET
iface $INTERNET inet dhcp" > /etc/network/interfaces
else
    echo "auto lo
iface lo inet loopback

auto $INTERNET
iface $INTERNET inet dhcp

auto $LOCALNET
iface $LOCALNET inet static
    address 192.168.111.1
    netmask 255.255.255.0
    broadcast 192.168.111.255
    network 192.168.111.0" > /etc/network/interfaces
fi

# APTITUDE
echo "### configuring software sources" 2>&1 >> $LOGFILE
cp -v /etc/apt/sources.list /etc/apt/sources.list_$BACKUP 2>&1 >> $LOGFILE
cat $(ls -1rt /etc/apt/sources.list_BACKUP* | head -n 1) | egrep -v "^#|updates|security" | sort -u > /etc/apt/sources.list

####################
# RESTART SERVICES #
####################

# NETWORK (executes also iptables script)
say "### restart network interfaces"
ifdown $INTERNET 2>&1 >> $LOGFILE
ifdown $LOCALNET 2>&1 >> $LOGFILE
ifup $INTERNET 2>&1 >> $LOGFILE
ifup $LOCALNET 2>&1 >> $LOGFILE

# DNSMASQ
say "### restart dnsmasq"
restart_dnsmasq

# ROUTING
say "### start routing"
sysctl -p /etc/sysctl.conf 2>&1 >> $LOGFILE

# SQUID
say "### restart squid"
restart_squid

# I would like to update the package chache
# but I can't since I myself block it :-)
say "### you should type 'sudo aptitude update' to update your cache"

say "INSTALLATION FINISHED AT $(date +%Y-%m-%d_%H:%M:%S)"

